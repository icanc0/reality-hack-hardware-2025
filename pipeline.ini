overlay with depth

gst-launch-1.0 -e --gst-debug=2 \
qtiqmmfsrc name=camsrc ! video/x-raw\(memory:GBM\),format=NV12,width=1280,height=720,framerate=30/1,compression=ubwc ! queue ! tee name=split \
split. ! queue ! qtivcomposer name=mixer sink_1::alpha=0.5 ! queue ! waylandsink fullscreen=true sync=false \
split. ! queue ! qtimlvconverter ! queue ! qtimltflite delegate=external external-delegate-path=libQnnTFLiteDelegate.so \
external-delegate-options="QNNExternalDelegate,backend_type=htp;" model=/opt/Midas-V2-Quantized.tflite ! queue ! \
qtimlvsegmentation module=midas-v2 labels=/opt/monodepth.labels constants="Midas,q-offsets=<0.0>,q-scales=<4.716535568237305>;" ! \
video/x-raw,width=256,height=144 \
! queue ! mixer.



overlay with object detection

gst-launch-1.0 -e --gst-debug=2 \
qtiqmmfsrc name=camsrc ! video/x-raw\(memory:GBM\),format=NV12,width=1280,height=720,framerate=30/1,compression=ubwc ! queue ! tee name=split \
split. ! queue ! qtimetamux name=metamux ! queue ! qtioverlay ! queue ! waylandsink fullscreen=true \
split. ! queue ! qtimlvconverter ! queue ! qtimltflite delegate=external external-delegate-path=libQnnTFLiteDelegate.so \
external-delegate-options="QNNExternalDelegate,backend_type=htp;" model=/opt/YOLOv8-Detection-Quantized.tflite ! queue ! \
qtimlvdetection threshold=75.0 results=10 module=yolov8 labels=/opt/yolov8.labels \
constants="YoloV8,q-offsets=<21.0,0.0,0.0>,q-scales=<3.093529462814331,0.00390625,1.0>;" ! text/x-raw ! queue ! metamux.

modified object detection

gst-launch-1.0 -e --gst-debug=2 \
qtiqmmfsrc name=camsrc ! video/x-raw\(memory:GBM\),format=NV12,width=1280,height=720,framerate=30/1,compression=ubwc ! queue ! tee name=split \
split. ! queue ! qtimetamux name=metamux ! queue ! qtioverlay ! queue ! waylandsink fullscreen=true \
split. ! queue ! qtimlvconverter ! queue ! qtimltflite delegate=external external-delegate-path=libQnnTFLiteDelegate.so \
external-delegate-options="QNNExternalDelegate,backend_type=htp;" model=/opt/YOLOv8-Detection-Quantized.tflite ! queue ! \
qtimlvdetection threshold=75.0 results=10 module=yolov8 labels=/opt/yolov8.labels \
constants="YoloV8,q-offsets=<21.0,0.0,0.0>,q-scales=<3.093529462814331,0.00390625,1.0>;" ! text/x-raw ! queue ! metamux.

You can use below gstreamer launch command on RB3 Gen2 for object detection usecase using yolov7_quantized model:

gst-launch-1.0 -e --gst-debug=2 \
qtiqmmfsrc name=camsrc ! video/x-raw\(memory:GBM\),format=NV12,width=1280,height=720,framerate=30/1,compression=ubwc ! queue ! tee name=split \
split. ! queue ! qtivcomposer name=mixer ! queue ! waylandsink fullscreen=true \
split. ! queue ! qtimlvconverter ! queue ! qtimltflite delegate=external external-delegate-path=libQnnTFLiteDelegate.so \
external-delegate-options="QNNExternalDelegate,backend_type=htp;" model=/opt/YOLOv8-Detection-Quantized.tflite ! queue ! \
qtimlvdetection threshold=50.0 results=10 module=yolov8 labels=/opt/yolov8.labels constants="YoloV8,q-offsets=<21.0,0.0,0.0>,q-scales=<3.093529462814331,0.00390625,1.0>;" ! \
video/x-raw,format=BGRA,width=640,height=360 ! queue ! mixer.

tried yolonas with waylandsink

; gst-launch-1.0 -e \
; qtiqmmfsrc name=camsrc ! video/x-raw\(memory:GBM\),format=NV12,width=1280,height=720,framerate=30/1,compression=ubwc ! queue ! tee name=split \
; split. ! queue ! qtimetamux name=metamux ! queue ! qtioverlay ! queue ! waylandsink fullscreen=true \
; split. ! queue ! qtimlvconverter ! queue ! qtimlsnpe delegate=dsp model=/opt/yolonas.dlc layers="</heads/Mul, /heads/Sigmoid>" ! queue ! \
; qtimlvdetection threshold=51.0 results=10 module=yolo-nas labels=/opt/yolonas.labels ! text/x-raw ! queue ! metamux.
 
 
; filesink location="/opt/mux.mp4"

gst-launch-1.0 -e \
qtiqmmfsrc name=camsrc ! video/x-raw\(memory:GBM\),format=NV12,width=1280,height=720,framerate=30/1,compression=ubwc ! queue ! tee name=split \
split. ! queue ! qtimetamux name=metamux ! queue ! qtioverlay ! queue ! qtimlmetaparser module=json ! filesink location="/opt/root.json" \
split. ! queue ! qtimlvconverter ! queue ! qtimlsnpe delegate=dsp model=/opt/yolonas.dlc layers="</heads/Mul, /heads/Sigmoid>" ! queue ! qtimlvdetection threshold=51.0 results=10 module=yolo-nas labels=/opt/yolonas.labels ! text/x-raw ! queue ! metamux.
 
now we do a single one to redis

gst-launch-1.0 -e \
qtiqmmfsrc name=camsrc ! video/x-raw\(memory:GBM\),format=NV12,width=1280,height=720,framerate=30/1,compression=ubwc ! queue ! tee name=split \
split. ! queue ! qtimetamux name=metamux ! queue ! qtioverlay ! queue ! qtimlmetaparser module=json ! \
qtiredissink sync=false async=false channel="Detection::yolonas::0" host="192.168.86.53" port=6379 \
split. ! queue ! qtimlvconverter ! queue ! qtimlsnpe delegate=dsp model=/opt/yolonas.dlc layers="</heads/Mul, /heads/Sigmoid>" ! \
queue ! qtimlvdetection threshold=51.0 results=10 module=yolo-nas labels=/opt/yolonas.labels ! text/x-raw ! queue ! metamux.







lets do a single topic for HEAT to redis //////////////

gst-launch-1.0 -e \
qtiqmmfsrc name=camsrc ! video/x-raw\(memory:GBM\),format=NV12,width=1280,height=720,framerate=30/1,compression=ubwc ! queue ! tee name=split \
split. ! queue ! qtimetamux name=metamux ! queue ! qtioverlay ! queue ! qtimlmetaparser module=json ! \
qtiredissink sync=false async=false channel="Detection::yolonas::0" host="192.168.86.53" port=6379 \
split. ! queue ! qtimlvconverter ! queue ! qtimlsnpe delegate=dsp model=/opt/yolonas.dlc layers="</heads/Mul, /heads/Sigmoid>" ! \
queue ! qtimlvdetection threshold=51.0 results=10 module=yolo-nas labels=/opt/yolonas.labels ! text/x-raw ! queue ! metamux.



this one works to file!!!

gst-launch-1.0 -e --gst-debug=2 \
qtiqmmfsrc name=camsrc ! video/x-raw\(memory:GBM\),format=NV12,width=1280,height=720,framerate=30/1,compression=ubwc ! queue ! tee name=split \
split. ! queue ! qtivcomposer name=mixer ! queue ! qtioverlay ! videoconvert ! video/x-raw,format=RGB ! queue ! pngenc ! multifilesink location="/home/root/sus.png" \
split. ! queue ! qtimlvconverter ! queue ! qtimltflite delegate=external external-delegate-path=libQnnTFLiteDelegate.so \
external-delegate-options="QNNExternalDelegate,backend_type=htp;" model=/opt/Midas-V2-Quantized.tflite ! queue ! \
qtimlvsegmentation module=midas-v2 labels=/opt/monodepth.labels constants="Midas,q-offsets=<0.0>,q-scales=<4.716535568237305>;" ! \
video/x-raw,width=256,height=144 \
! queue ! mixer.

optimize the one above

gst-launch-1.0 -e --gst-debug=2 \
qtiqmmfsrc name=camsrc ! video/x-raw\(memory:GBM\),format=NV12,width=1280,height=720,framerate=30/1,compression=ubwc ! queue ! tee name=split \
split. ! queue ! qtimlvconverter ! queue ! qtimltflite delegate=external external-delegate-path=libQnnTFLiteDelegate.so \
external-delegate-options="QNNExternalDelegate,backend_type=htp;" model=/opt/Midas-V2-Quantized.tflite ! queue ! \
qtimlvsegmentation module=midas-v2 labels=/opt/monodepth.labels constants="Midas,q-offsets=<0.0>,q-scales=<4.716535568237305>;" ! \
video/x-raw,width=256,height=144 ! videoconvert ! video/x-raw,format=RGB ! queue ! pngenc ! multifilesink location="/home/root/sus.png"




and we want to do 2 topics to redis

gst-launch-1.0 -e \
qtiqmmfsrc name=camsrc ! video/x-raw\(memory:GBM\),format=NV12,width=1280,height=720,framerate=30/1,compression=ubwc ! queue ! tee name=split \
split. ! queue ! qtimetamux name=metamux ! queue ! qtioverlay ! queue ! qtimlmetaparser module=json ! \
qtiredissink sync=false async=false channel="Detection::yolonas::0" host="192.168.86.53" port=6379 \
split. ! queue ! qtimlvconverter ! queue ! qtimlsnpe delegate=dsp model=/opt/yolonas.dlc layers="</heads/Mul, /heads/Sigmoid>" ! \
queue ! qtimlvdetection threshold=51.0 results=10 module=yolo-nas labels=/opt/yolonas.labels ! text/x-raw ! queue ! metamux. \
split. ! queue ! qtivcomposer name=mixer ! queue ! qtioverlay ! videoconvert ! video/x-raw,format=RGB ! queue ! pngenc ! multifilesink location="/home/root/sus.png" \
split. ! queue ! qtimlvconverter ! queue ! qtimltflite delegate=external external-delegate-path=libQnnTFLiteDelegate.so \
external-delegate-options="QNNExternalDelegate,backend_type=htp;" model=/opt/Midas-V2-Quantized.tflite ! queue ! \
qtimlvsegmentation module=midas-v2 labels=/opt/monodepth.labels constants="Midas,q-offsets=<0.0>,q-scales=<4.716535568237305>;" ! \
video/x-raw,width=256,height=144 \
! queue ! mixer.

optimize the above 


gst-launch-1.0 -e \
qtiqmmfsrc name=camsrc ! video/x-raw\(memory:GBM\),format=NV12,width=1280,height=720,framerate=30/1,compression=ubwc ! queue ! tee name=split \
split. ! queue ! qtimetamux name=metamux ! queue ! qtioverlay ! queue ! qtimlmetaparser module=json ! \
qtiredissink sync=false async=false channel="Detection::yolonas::0" host="192.168.86.53" port=6379 \
split. ! queue ! qtimlvconverter ! queue ! qtimlsnpe delegate=dsp model=/opt/yolonas.dlc layers="</heads/Mul, /heads/Sigmoid>" ! \
queue ! qtimlvdetection threshold=51.0 results=10 module=yolo-nas labels=/opt/yolonas.labels ! text/x-raw ! queue ! metamux. \
split. ! queue ! qtimlvconverter ! queue ! qtimltflite delegate=external external-delegate-path=libQnnTFLiteDelegate.so \
external-delegate-options="QNNExternalDelegate,backend_type=htp;" model=/opt/Midas-V2-Quantized.tflite ! queue ! \
qtimlvsegmentation module=midas-v2 labels=/opt/monodepth.labels constants="Midas,q-offsets=<0.0>,q-scales=<4.716535568237305>;" ! \
video/x-raw,width=256,height=144 ! videoconvert ! video/x-raw,format=RGB ! queue ! pngenc ! multifilesink location="/home/root/sus.png"
